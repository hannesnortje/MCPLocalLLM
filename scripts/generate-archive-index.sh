#!/usr/bin/env bash
#
# Generate Archive Index
#
# Creates a searchable index of all archived log files.
# Includes sprint, filename, date, line count, file size.
#
# Usage:
#   ./scripts/generate-archive-index.sh
#

set -euo pipefail

PROJECT_ROOT="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
ARCHIVE_BASE="${PROJECT_ROOT}/.oodatcaa/work/archive"
INDEX_FILE="${PROJECT_ROOT}/ARCHIVE_INDEX.md"

# Colors
GREEN='\033[0;32m'
BLUE='\033[0;34m'
NC='\033[0m'

echo "Generating Archive Index..."
echo

# Create index header
cat > "$INDEX_FILE" << 'EOF'
# Archive Index

Searchable index of archived OODATCAA log files.

## Quick Search

- **By Sprint:** Use Ctrl+F to search for `sprint_N`
- **By File:** Search for file name (e.g., `AGENT_LOG`, `SPRINT_LOG`)
- **By Date:** Search for date pattern (e.g., `2025-10-03`)

## Archive Statistics

EOF

# Calculate statistics
total_archives=0
total_size=0
sprint_counts=()

if [ -d "$ARCHIVE_BASE" ]; then
    for sprint_dir in "$ARCHIVE_BASE"/sprint_*/; do
        if [ -d "$sprint_dir" ]; then
            sprint_num=$(basename "$sprint_dir" | grep -oP '\d+')
            count=$(find "$sprint_dir" -type f -name "*.md" | wc -l)
            size=$(du -sh "$sprint_dir" 2>/dev/null | cut -f1)
            
            echo "- **Sprint ${sprint_num}:** ${count} archives, ${size}" >> "$INDEX_FILE"
            
            total_archives=$((total_archives + count))
        fi
    done
fi

echo "- **Total Archives:** ${total_archives} files" >> "$INDEX_FILE"
echo >> "$INDEX_FILE"

# Create main index table
cat >> "$INDEX_FILE" << 'EOF'
## Archive Files

| Sprint | File | Archive Number | Created | Lines | Size | Path |
|--------|------|----------------|---------|-------|------|------|
EOF

# Scan all archive files
if [ -d "$ARCHIVE_BASE" ]; then
    for sprint_dir in "$ARCHIVE_BASE"/sprint_*/; do
        if [ ! -d "$sprint_dir" ]; then
            continue
        fi
        
        sprint_num=$(basename "$sprint_dir" | grep -oP '\d+')
        
        for archive_file in "$sprint_dir"/*.md; do
            if [ ! -f "$archive_file" ]; then
                continue
            fi
            
            filename=$(basename "$archive_file")
            base_name=$(echo "$filename" | sed 's/_archive_[0-9]*\.md//')
            archive_num=$(echo "$filename" | grep -oP 'archive_\K\d+')
            
            # Get file metadata
            line_count=$(wc -l < "$archive_file")
            file_size=$(du -h "$archive_file" | cut -f1)
            created_date=$(stat -c %y "$archive_file" 2>/dev/null | cut -d' ' -f1)
            rel_path=$(realpath --relative-to="$PROJECT_ROOT" "$archive_file")
            
            # Add to index
            echo "| sprint_${sprint_num} | ${base_name} | ${archive_num} | ${created_date} | ${line_count} | ${file_size} | \`${rel_path}\` |" >> "$INDEX_FILE"
        done
    done
fi

# Add footer
cat >> "$INDEX_FILE" << 'EOF'

## How to Access Archives

### Read an archive file:
```bash
cat .oodatcaa/work/archive/sprint_N/FILENAME_archive_NNN.md
```

### Search across all archives:
```bash
grep -r "search term" .oodatcaa/work/archive/
```

### Find archives for specific sprint:
```bash
ls -lh .oodatcaa/work/archive/sprint_2/
```

## Automatic Updates

This index is automatically regenerated after each log rotation.
To manually update:
```bash
bash scripts/generate-archive-index.sh
```

---

*Last updated:* TIMESTAMP  
*Generated by:* `.oodatcaa/log-rotation-system`
EOF

# Update timestamp
sed -i "s/TIMESTAMP/$(date '+%Y-%m-%d %H:%M:%S')/" "$INDEX_FILE"

echo -e "${GREEN}âœ“${NC} Archive index generated: ${INDEX_FILE}"
echo
echo "Statistics:"
echo "  Total archives: ${total_archives}"
echo "  Location: ${ARCHIVE_BASE}"
echo
echo "View index: cat ${INDEX_FILE}"

