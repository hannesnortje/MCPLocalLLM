[build-system]
requires = ["setuptools>=69", "wheel", "build"]
build-backend = "setuptools.build_meta"

[project]
name = "mdnotes"
version = "0.1.0"
description = "CLI tool for managing and searching Markdown notes with MCP vector search integration"
readme = "README.md"
authors = [{ name = "Your Name", email = "you@example.com" }]
requires-python = ">=3.11,<3.13"
keywords = ["markdown", "notes", "cli", "knowledge-management", "search", "mcp", "vector-database"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Text Processing :: Markup",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    # MDNotes Core
    "click>=8.1.0",
    "rich>=13.0.0",
    "whoosh>=2.7.4",
    
    # MCP Core - Memory & Vector Search
    "mcp>=1.13.1,<2.0.0",
    "qdrant-client>=1.7.0,<2.0.0",
    "sentence-transformers>=2.5.1,<3.0.0",
    "scikit-learn>=1.4.0,<2.0.0",  # Required by sentence-transformers
    
    # M1 Max Optimized ML (CPU-only, no CUDA)
    "torch>=2.0.0,<3.0.0; platform_machine != 'arm64'",  # CPU-only PyTorch for non-Apple Silicon
    "torch>=2.0.0,<3.0.0; platform_machine == 'arm64'",  # MPS-enabled PyTorch for Apple Silicon
    
    # Data Processing
    "numpy>=1.26.0,<2.0.0",
    "markdown>=3.5.0,<4.0.0",
    "beautifulsoup4>=4.12.0,<5.0.0",
    
    # Configuration & Async Utilities
    "python-dotenv>=1.0.0,<2.0.0",
    "pyyaml>=6.0.0,<7.0.0",
    "aiofiles>=24.1.0,<25.0.0",
    "aiohttp>=3.9.1,<4.0.0",
]

[project.scripts]
mdnotes = "mdnotes.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/mdnotes"
Repository = "https://github.com/yourusername/mdnotes"

[project.optional-dependencies]
dev = [
  "black>=24.0.0",
  "ruff>=0.5.0",
  "mypy>=1.8.0",
  "pytest>=8.0.0",
  "pytest-asyncio>=0.21.0,<1.0.0",
  "pytest-cov>=4.1.0",
  "pip-audit>=2.7.0",
  "bandit>=1.7.7",
  "build>=1.2.1",
  "types-setuptools",
  "types-markdown>=3.5.0,<4.0.0",
  "types-PyYAML>=6.0.0",
  "types-aiofiles>=24.0.0"
]
training = [
  "mlx-lm>=0.0.1; platform_machine == 'arm64'",  # Apple Silicon only
  "transformers>=4.30.0,<5.0.0",
  "datasets>=2.12.0,<3.0.0",
  "accelerate>=0.20.0,<1.0.0",
  "peft>=0.4.0,<1.0.0",  # LoRA/QLoRA training
  "bitsandbytes>=0.41.0,<1.0.0; platform_machine != 'arm64'",  # Quantization (not available on Apple Silicon)
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 100
target-version = ["py311"]

[tool.ruff]
line-length = 100
src = ["src", "tests"]
extend-select = [
  "F",  # pyflakes
  "E", "W",  # pycodestyle
  "I",       # isort imports
  "B",       # flake8-bugbear
  "UP",      # pyupgrade
  "S",       # bandit (security checks)
]
ignore = ["S101"]  # assert used in tests

[tool.ruff.lint.isort]
known-first-party = ["mdnotes", "mcp_local"]

[tool.mypy]
python_version = "3.11"
packages = ["mdnotes", "mcp_local"]
strict = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
exclude = ["tests/"]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.coverage.run]
branch = true
source = ["src"]

[tool.coverage.report]
show_missing = true
fail_under = 85

